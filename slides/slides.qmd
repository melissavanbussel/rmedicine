---
title: "R package development with GitHub Pages and `pkgdown`"
subtitle: "R/Medicine 2025"
author: "Melissa Van Bussel"
institute: "Senior Data Scientist, Statistics Canada"
execute:
  echo: true
  eval: false
  message: false
  warning: false
format:
  revealjs:
    theme: custom.scss
    highlight-style: zenburn
    incremental: false
    keyboard: true
    touch: true
    code-overflow: scroll
    code-line-numbers: true
    code-copy: true
    lang: en
    footer: "[ggnot2.site/index.html](https://ggnot2.site/index.html)"
    slide-number: c/t
    include-after-body: clean_title_page.html
    include-in-header:
          - text: |
              <link rel="icon" type="image/png" href="logo.png">  
---

# Housekeeping and preamble

## Where to access today's materials

## How to participate

## By the end of this workshop, you will have...

* ðŸŒŽ Your package available on GitHub for others to install
* ðŸ“„ A polished pkgdown website for your package, deployed via GitHub Pages
* ðŸŽ¨ An understanding of how to customize the trickier components of pkgdown websites

## The final product we will create

<iframe src="https://ggnot2.site/index.html" width="1000" height="450"></iframe>

## Background knowledge

* Participants should have prior experience with Git, but donâ€™t need prior experience with `pkgdown` or GitHub Pages.
* Participants should also have some basic familiarity with the structure of R packages (e.g., the `R/` folder and the `man/` folder).

# Agenda/schedule for today

# Pre-workshop setup steps

::: {.footer}

[Click here for the PDF version](https://rconsortium.github.io/RMedicine_website/files/R%20package%20development%20with%20GitHub%20Pages%20and%20pkgdown.pdf)

:::

## Software installations

Please ensure you have all of the following software installed (and updated to the most recent versions):

* [R v4.5.0](https://cran.rstudio.com/)
* [Rtools v4.5](https://cran.r-project.org/bin/windows/Rtools/)
* [RStudio v2025.05.0+496](https://posit.co/download/rstudio-desktop/)
* [Git v2.49.0](https://git-scm.com/downloads)

## Git and GitHub setup

* We will be using GitHub (and GitHub Pages) for this workshop. Please ensure you have a GitHub account that youâ€™re able to log into and access during the workshop.
* Before the workshop, please ensure that Git is configured properly on your machine. 
* In RStudio, you can run the `git_sitrep()` function from the `usethis` package to verify your configuration.

## What you should see from running `git_sitrep()`

* You should see your name and email under the "Git global (user)" section. If not:

```{r}
usethis::use_git_config(
 user.name = "Melissa Van Bussel",
 user.email = "melissalisevb@gmail.com"
)
```

---

* You should see `Vaccinated: TRUE`. If not: 

```{r}
usethis::git_vaccinate()
```

---

* You should see the username and email associated with your GitHub account, and you should see the word "discovered" beside the line that says "Personal access token". If not:

```{r}
usethis::create_github_token()
gitcreds::gitcreds_set()
```

# Basic package creation

## Creating a new project

* Make sure the `devtools` package is installed
* `File > New project > R package using devtools`
* Name of the package: `rmedicine`

```{r}
library(devtools)
library(pkgdown)
```

## The `DESCRIPTION` file

Run 

```{r}
use_mit_license()
```

then update the `Authors@R` field and change the version number to something a little less long.

## Creating a `README.md` file

```{r}
use_readme_md()
```

## Making our first R function

:::: {.columns}

::: {.column width="40%"}

```{r}
use_r("print_hello_world")
```

:::

::: {.column width="5%"}

:::

::: {.column width="55%"}

```{r}
#' Print hello world
#'
#' This function just prints hello world.
#'
#' @param x This argument does nothing.
#'  If it did do something, it might require more words to explain.
#'
#' @return Prints `"Hello, world!"` to the console
#'
#' @examples
#' print_hello_world(x = 1)
#'
#' @export
print_hello_world <- function(x) {
  print("Hello, world!")
}
```

:::

::::

## Let's add a second function

:::: {.columns}

::: {.column width="40%"}

```{r}
use_r("print_hello_rmedicine")
```

:::

::: {.column width="5%"}

:::

::: {.column width="55%"}

```{r}
#' Print hello R/Medicine
#'
#' This function just prints hello R/Medicine.
#'
#' @param x This argument does nothing.
#'  If it did do something, it might require more words to explain.
#'
#' @return Prints `"Hello, R/Medicine"` to the console
#'
#' @examples
#' print_hello_rmedicine(x = 1)
#'
#' @export
print_hello_rmedicine <- function(x) {
  print("Hello, R/Medicine!")
}
```

:::

::::

## We should probably add some tests, too

::::: {.panel-tabset}

## The `print_hello_world` function

:::: {.columns}

::: {.column width="40%"}

```{r}
# install.packages("testthat")
library(testthat)
use_test("print_hello_world")
```

:::

::: {.column width="5%"}

:::

::: {.column width="55%"}

```{r}
test_that("print_hello_world prints hello world", {
  expect_equal(
    print_hello_world(x = "test"),
    "Hello, world!"
  )
})
```

:::

::::

## The `print_hello_rmedicine` function

:::: {.columns}

::: {.column width="40%"}

```{r}
# install.packages("testthat")
library(testthat)
use_test("print_hello_rmedicine")
```

:::

::: {.column width="5%"}

:::

::: {.column width="55%"}

```{r}
test_that("print_hello_rmedicine prints hello rmedicine", {
  expect_equal(
    print_hello_rmedicine(x = "test"),
    "Hello, R/Medicine!"
  )
})
```

:::

::::

:::::

# Getting things up onto GitHub Pages

# Let's make things a little prettier

## Adding a logo and favicon

## Adding a bootswatch theme

## bslib variables: primary colour

## bslib variables: custom fonts

## Adding a custom.scss file (where does it go?)

## Right clicking and inspecting

* Change the colour of the search bar for one mode only

## Adding a lightswitch

## Changing stuff for both light and dark mode

# Your package's function documentation

## The starts_with page

# Basic navbar customization

## Add search, github, my_linkedin, and lightswitch components

## Add the font-awesome icons

# Basic footer customization

# Adding javascript or other things

## Adding the js_alert

## Adding the canvas confetti

# BREAK

# A little bit more about how GH Pages actually works

# Creating the project_assets folder

## Changing the link.svg image

# Adding a vignette

# Redoing the navbar structure

# Adding an image to your navbar

## The js

## The CSS

# The sidebar

# Basic badges

# Dynamic badges and your pipeline

## Code coverage badge

# BREAK?

# Extra fancy stuff if time

# Using a custom domain for GH Pages

# Putting Quarto or other stuff inside your pkgdown
